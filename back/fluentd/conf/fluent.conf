# fluentd/conf/fluent.conf

<source>
  @type forward
  port 24224
  bind 0.0.0.0
</source>

# Rename system properties to match logub model
<filter app.**>
  @type rename_key
  rename_rule1 container_id systemProperties.containerId
  rename_rule2 container_name systemProperties.containerName
  rename_rule3 env systemProperties.env
</filter>

# Flatten the json log
<filter app.**>
  @type parser
  key_name log
  reserve_data true
  remove_key_name_field true
  <parse>
    @type json
  </parse>
</filter>

# Flatten all subobject
<filter app.**>
  @type flatten_hash
  separator .
</filter>

# Rename mdc field to businessProperties (TODO: remove mdc and use env var instead to let the user choose his own business properties key)
<filter app.**>
  @type rename_key
  rename_rule1 ^\mdc.(.+) businessProperties.${md[1]}
</filter>

# Remove any logger timestamp
<filter app.**>
  @type record_transformer
  remove_keys timestamp
</filter>

# Add epoch timestamp for the original event
<filter app.**>
  @type record_transformer
  enable_ruby
  <record>
    timestamp ${time.strftime('%s%3N')}
    service ${tag}
  </record>
</filter>

# Rename log field to message
<filter app.**>
    @type rename_key
    rename_rule1 log message
</filter>

# Save in Redis
<match app.**>
  @type redis

  host redis
  port 6379
  db_number 0
  insert_key_prefix 'log:${tag}'
  strftime_format "%s%N"
  allow_duplicate_key false
  flush_interval 5s
  <buffer tag,time>
      timekey 5
  </buffer>
</match>
